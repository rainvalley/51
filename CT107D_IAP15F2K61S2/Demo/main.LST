C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 13:59:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include"onewire.h"
   3          #include"ds1302.h"
   4          #include"data.h"
   5          #include"iic.h"
   6          #include"intrins.h"
   7          void Display_Dynamic();
   8          uchar code dig_code[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};//数码管显示内容
   9          uchar time[7]={0x00,0x00,0x00,0x01,0x01,0x01,0x20};//DS1302初始化内容
  10          uint temp=0;
  11          int data_pcf8591=0;
  12          uint data_at24c02=0;
  13          uint distance=0;
  14          sbit TX=P1^0;
  15          sbit RX=P1^1;
  16          uint j;
  17          uint count_times=0;
  18          uint count_time=0;
  19          uint frequency=0;
  20          //延时函数
  21          void Delay(uint t)
  22          {
  23   1              while(t--);
  24   1      }
  25          
  26          //选择138译码器输出端
  27          void selectHC573(uchar channel)
  28          {
  29   1              switch(channel)
  30   1              {
  31   2                      case 4:
  32   2                      P2=(P2&0x1f)|0x80;//不改变P2其他端口电平的情况下改变138译码器输入，由于前移一位故channel*2。
  33   2                      break;
  34   2                      case 5:
  35   2                      P2=(P2&0x1f)|0xa0;
  36   2                      break;
  37   2                      case 6:
  38   2                      P2=(P2&0x1f)|0xc0;
  39   2                      break;
  40   2                      case 7:
  41   2                      P2=(P2&0x1f)|0xe0;
  42   2              }
  43   1      }
  44          
  45          //按位点亮数码管
  46          void DisplaySMG_Bit(uchar value,uchar pos)
  47          {       
  48   1              P0=0XFF;
  49   1              selectHC573(6);
  50   1              P0=0X01<<pos;//channel选择为6时选择数码管位置
  51   1              selectHC573(7);
  52   1              P0=dig_code[value];//channel选择为7时选择数码管显示内容
  53   1      }
  54          
  55          //获取温度
C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 13:59:52 PAGE 2   

  56          void tempget()
  57          {
  58   1              uchar low,high;
  59   1              init_ds18b20();
  60   1              Write_DS18B20(0XCC);
  61   1              Write_DS18B20(0X44);
  62   1      
  63   1              init_ds18b20();
  64   1              Write_DS18B20(0XCC);
  65   1              Write_DS18B20(0Xbe);
  66   1      /*
  67   1      DS18B20操作步骤(P11)：
  68   1      1-初始化
  69   1      2-跳过ROM
  70   1      3-转换温度(0x44)/开始读取温度Scratchpad(0xbe)
  71   1      */
  72   1      
  73   1              low=Read_DS18B20();
  74   1              high=Read_DS18B20();
  75   1      
  76   1              temp=high<<4;
  77   1              temp|=(low>>4);//将DS18B20数据转换为十进制并截取整数部分
  78   1      } 
  79          
  80          //动态显示温度
  81          void Display_Dynmaic_temp()
  82          {
  83   1              tempget();
  84   1              DisplaySMG_Bit(temp%100/10,5);
  85   1              Delay(500);
  86   1              P0=0XFF;
  87   1              DisplaySMG_Bit(temp%10,6);
  88   1              Delay(500);
  89   1              P0=0XFF;
  90   1              //显示温度整数部分
  91   1              selectHC573(6);
  92   1              P0=0X01<<7;
  93   1              selectHC573(7);
  94   1              P0=0XC6;//显示C代表摄氏度
  95   1      }
  96                                                                                    
  97          //DS1302初始化
  98          
  99          void ds1302_init()
 100          {
 101   1              uchar add=0x80;//写数据地址
 102   1              uchar i;
 103   1              Write_Ds1302_Byte(0x8e,0x00); //关闭写保护
 104   1              for(i=0;i<7;i++)
 105   1              {
 106   2                      Write_Ds1302_Byte(add,time[i]);
 107   2                      add=add+2;
 108   2              }
 109   1              Write_Ds1302_Byte(0x8e,0x80); //开启写保护
 110   1      }
 111          
 112          //读取DS1302时间，地址可见P9，WP位为写保护控制位
 113          void ds1302_read()
 114          {
 115   1              uchar i;
 116   1              uchar add=0x81;//读数据地址
 117   1              Write_Ds1302_Byte(0x8e,0x00);//关闭写保护
C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 13:59:52 PAGE 3   

 118   1              for(i=0;i<7;i++)
 119   1              {
 120   2                      time[i]=Read_Ds1302_Byte(add);
 121   2                      add=add+2;
 122   2              }
 123   1              Write_Ds1302_Byte(0x8e,0x80);//开启写保护
 124   1      }
 125          
 126          //动态显示时间
 127          void Display_Dynmaic_time()
 128          {
 129   1              ds1302_read();
 130   1              DisplaySMG_Bit(time[1]/16,0); //BCD码取十位
 131   1              Delay(500);
 132   1              P0=0XFF;
 133   1              DisplaySMG_Bit(time[1]&0x0f,1);//BCD码取个位
 134   1              Delay(500);
 135   1              P0=0XFF; //以上是分钟的显示
 136   1              selectHC573(6);
 137   1              P0=0X01<<2;
 138   1              selectHC573(7);
 139   1              P0=~0X40;
 140   1              Delay(500);
 141   1              P0=0XFF; //以上是分隔符显示
 142   1              DisplaySMG_Bit(time[0]/16,3);
 143   1              Delay(500);
 144   1              P0=0XFF;
 145   1              DisplaySMG_Bit(time[0]&0x0f,4); //以上是秒的显示
 146   1      }
 147          
 148          //从A/D通道3读取数据
 149          void Read_AIN3()
 150          {
 151   1              IIC_Start();            //IIC总线起始信号                                                       
 152   1              IIC_SendByte(0x90);     //PCF8591的写设备地址           
 153   1              IIC_WaitAck();          //等待从机应答
 154   1                              
 155   1              IIC_SendByte(0x03);     //写入PCF8591的控制字节         
 156   1              IIC_WaitAck();          //等待从机应答                                          
 157   1              IIC_Stop();             //IIC总线停止信号                                       
 158   1              
 159   1      
 160   1      
 161   1              IIC_Start();                                                                                    
 162   1              IIC_SendByte(0x91);             
 163   1              IIC_WaitAck();
 164   1                                              
 165   1              data_pcf8591 = IIC_RecByte();                   
 166   1              IIC_SendAck(1);                 //产生非应答信号                                
 167   1              IIC_Stop();             //IIC总线停止信号                                       
 168   1      }
 169          
 170          
 171          void Display_Dynmaic_pcf8591()
 172          {
 173   1              Read_AIN3();
 174   1              DisplaySMG_Bit(data_pcf8591/100,0);
 175   1              Delay(500);
 176   1              DisplaySMG_Bit((data_pcf8591%100)/10,1);
 177   1              Delay(500);
 178   1              DisplaySMG_Bit(data_pcf8591%10,2);
 179   1              Delay(500);
C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 13:59:52 PAGE 4   

 180   1      }
 181          
 182          void write_at24c02(uchar addr,uint data_at24c02)
 183          {
 184   1              IIC_Start();
 185   1              IIC_SendByte(0XA0);
 186   1              IIC_WaitAck();
 187   1              IIC_SendByte(addr);
 188   1              IIC_WaitAck();
 189   1              IIC_SendByte(data_at24c02);
 190   1              IIC_WaitAck();
 191   1              IIC_Stop();
 192   1      }
 193          
 194          uint read_at24c02(uchar addr)
 195          {
 196   1              uchar tmp_at24c02;
 197   1              IIC_Start();
 198   1              IIC_SendByte(0XA0);
 199   1              IIC_WaitAck();
 200   1              IIC_SendByte(addr);
 201   1              IIC_WaitAck();
 202   1      
 203   1              IIC_Start();
 204   1              IIC_SendByte(0XA1);
 205   1              IIC_WaitAck();
 206   1              tmp_at24c02=IIC_RecByte();
 207   1              IIC_SendAck(1);
 208   1              IIC_Stop();
 209   1              return tmp_at24c02;
 210   1      }
 211          
 212          void Display_Dynmaic_at24c02()
 213          {       
 214   1              write_at24c02(0X01,0x0f);
 215   1              data_at24c02=read_at24c02(0x01);
 216   1              DisplaySMG_Bit(data_at24c02/100,0);
 217   1              Delay(500);
 218   1              DisplaySMG_Bit(data_at24c02%100/10,1);
 219   1              Delay(500);
 220   1              DisplaySMG_Bit(data_at24c02%10,2);
 221   1              Delay(500);
 222   1              
 223   1      }
 224          
 225          void Delay12us()                //@12.000MHz
 226          {
 227   1              unsigned char i;
 228   1      
 229   1              _nop_();
 230   1              _nop_();
 231   1              i = 33;
 232   1              while (--i);
 233   1      }
 234          
 235          void send_wave()
 236          {
 237   1              uchar i;
 238   1              for(i=0;i<8;i++)
 239   1              {
 240   2                      TX=1;
 241   2                      Delay12us();
C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 13:59:52 PAGE 5   

 242   2                      TX=0;
 243   2                      Delay12us();
 244   2              }
 245   1      }
 246          
 247          void measure_distance()
 248          {
 249   1              uint time_sonic=0;
 250   1              TMOD&=0X0F;
 251   1              TL1=0X00;
 252   1              TH1=0X00;
 253   1      
 254   1              send_wave();
 255   1              TR1=1;
 256   1              while((RX==1)&&(TF1==0));
 257   1              TR1=0;
 258   1      
 259   1              if(TF1==0)
 260   1              {
 261   2                      time_sonic=TH1;
 262   2                      time_sonic=(time_sonic<<8)|TL1;
 263   2                      distance=((time_sonic/10)*17)/100+3;
 264   2              }
 265   1              else
 266   1              {
 267   2                      TF1=0;
 268   2                      distance=999;
 269   2              }
 270   1      }
 271          
 272          void Display_Dynmaic_sonic()
 273          {
 274   1              measure_distance();
 275   1              for(j=0;j<100;j++)
 276   1              {
 277   2                      DisplaySMG_Bit(distance/100,0);
 278   2                      Delay(500);
 279   2                      DisplaySMG_Bit(distance%100/10,1);
 280   2                      Delay(500);
 281   2                      DisplaySMG_Bit(distance%10,2);
 282   2                      Delay(500);
 283   2              }
 284   1              
 285   1      }
 286          
 287          void init_timer()
 288          {
 289   1              TH0=0XFF;
 290   1              TL0=0XFF;
 291   1              TH1=(65536-50000)/256;
 292   1              TL1=(65536-50000)%256;
 293   1      
 294   1              TMOD=0X16;
 295   1      
 296   1              ET1=1;
 297   1              ET0=1;
 298   1              EA=1;
 299   1              TR0=1;
 300   1              TR1=1;
 301   1      }
 302          
 303          void t0_service() interrupt 1
C51 COMPILER V9.60.0.0   MAIN                                                              02/21/2020 13:59:52 PAGE 6   

 304          {
 305   1              count_times++;
 306   1      }
 307          
 308          void t1_service() interrupt 3
 309          {
 310   1              TH1=(65536-50000)/256;
 311   1              TL1=(65536-50000)%256;
 312   1              count_time++;
 313   1              if(count_time==20)
 314   1              {                  
 315   2                      frequency=count_times;
 316   2                      count_times=0;
 317   2                      count_time=0;
 318   2              }
 319   1      }
 320          
 321          void Display_Dynmaic_ne555()
 322          {
 323   1              DisplaySMG_Bit(frequency/10000,3);
 324   1              Delay(500);
 325   1              DisplaySMG_Bit(frequency/1000%10,4);
 326   1              Delay(500);
 327   1              DisplaySMG_Bit(frequency/100%10,5);
 328   1              Delay(500);
 329   1              DisplaySMG_Bit(frequency/10%10,6);
 330   1              Delay(500);
 331   1              DisplaySMG_Bit(frequency%10,7);
 332   1              Delay(500);
 333   1      }
 334          
 335          int main()
 336          {
 337   1              selectHC573(5);
 338   1              P0=0X00;//初始化板上资源，关闭蜂鸣器与继电器
 339   1              selectHC573(7);
 340   1              ds1302_init();
 341   1              init_timer();
 342   1              while(1)
 343   1              {       
 344   2                      //Display_Dynmaic_temp();
 345   2                      //Display_Dynmaic_time();
 346   2                      Display_Dynmaic_pcf8591();
 347   2                      //Display_Dynmaic_at24c02();
 348   2                      //Display_Dynmaic_sonic();
 349   2                      //Display_Dynmaic_ne555();
 350   2              }
 351   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1080    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
