C51 COMPILER V9.60.0.0   DEBUG                                                             08/23/2020 09:56:11 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\obj\DEBUG.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Public\DEBUG.C OPTIMIZE(8,SPEED) BROWSE INCDIR(.\ADC;.\Compare;.\FlashRo
                    -m;.\GPIO;.\Public;.\PWM;.\SPI;.\Timer;.\TouchKey;.\UART;.\USB;.\Type_C;.\Infrared;.\OLED;.\HC-SR04;.\MNPWM) DEBUG OBJECT
                    -EXTEND PRINT(.\DEBUG.lst) TABS(2) OBJECT(.\obj\DEBUG.obj)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : DEBUG.C
   3          * Author             : WCH
   4          * Version            : V1.0
   5          * Date               : 2018/09/20
   6          * Description        : CH5XX DEBUG Interface
   7                               (1)¡¢Ö÷ÆµÉèÖÃ;
   8                               (2)¡¢us\ms»ù±¾ÑÓÊ±º¯Êý;                     
   9                               (3)¡¢´®¿Ú0Êä³ö´òÓ¡ÐÅÏ¢£¬²¨ÌØÂÊ¿Éµ÷;                       
  10                               (4)¡¢¿´ÃÅ¹·³õÊ¼»¯ºÍ¸³Öµº¯Êý;                        
  11          *******************************************************************************/
  12          
  13          #include ".\Public\CH549.H"
  14          #include ".\Public\DEBUG.H"
  15          
  16          /*******************************************************************************
  17          * Function Name  : CfgFsys( )
  18          * Description    : CH5XXÊ±ÖÓÑ¡ÔñºÍÅäÖÃº¯Êý,Ä¬ÈÏÊ¹ÓÃÄÚ²¿¾§Õñ24MHz£¬Èç¹û¶¨ÒåÁËFREQ_SYS¿ÉÒÔ
  19                             ¸ù¾ÝPLL_CFGºÍCLOCK_CFGÅäÖÃµÃµ½£¬¹«Ê½ÈçÏÂ£º
  20                             Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  21                             ¾ßÌåÊ±ÖÓÐèÒª×Ô¼ºÅäÖÃ
  22          * Input          : None
  23          * Output         : None
  24          * Return         : None
  25          *******************************************************************************/ 
  26          void CfgFsys( )  
  27          {
  28   1      #if OSC_EN_XT 
                  SAFE_MOD = 0x55;
                  SAFE_MOD = 0xAA;
                  CLOCK_CFG |= bOSC_EN_XT;                          //Ê¹ÄÜÍâ²¿¾§Õñ
                  CLOCK_CFG &= ~bOSC_EN_INT;                        //¹Ø±ÕÄÚ²¿¾§Õñ 
              #else
  34   1          SAFE_MOD = 0x55;
  35   1          SAFE_MOD = 0xAA;
  36   1          CLOCK_CFG |= bOSC_EN_INT;                        //Ê¹ÄÜÄÚ²¿¾§Õñ 
  37   1          CLOCK_CFG &= ~bOSC_EN_XT;                        //¹Ø±ÕÍâ²¿¾§Õñ 
  38   1      #endif  
  39   1          SAFE_MOD = 0x55;
  40   1          SAFE_MOD = 0xAA;
  41   1      #if FREQ_SYS == 48000000  
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x07;  // 48MHz 
              #endif  
  44   1      #if FREQ_SYS == 32000000  
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 32MHz 
              #endif  
  47   1      #if FREQ_SYS == 24000000    
  48   1          CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 24MHz 
  49   1      #endif
  50   1      #if FREQ_SYS == 16000000    
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 16MHz
              #endif  
  53   1      #if FREQ_SYS == 12000000    
C51 COMPILER V9.60.0.0   DEBUG                                                             08/23/2020 09:56:11 PAGE 2   

                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 12MHz 
              #endif  
  56   1      #if FREQ_SYS == 3000000 
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz  
              #endif
  59   1      #if FREQ_SYS == 750000  
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz
              #endif
  62   1      #if FREQ_SYS == 187500  
                  CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5KHz  
              #endif
  65   1          SAFE_MOD = 0x00;
  66   1      }
  67          
  68          /*******************************************************************************
  69          * Function Name  : mDelayus(UNIT16 n)
  70          * Description    : usÑÓÊ±º¯Êý
  71          * Input          : UNIT16 n
  72          * Output         : None
  73          * Return         : None
  74          *******************************************************************************/ 
  75          void mDelayuS( UINT16 n )  // ÒÔuSÎªµ¥Î»ÑÓÊ±
  76          {
  77   1        while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  78   2          ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  79   2      #ifdef  FREQ_SYS
  80   2      #if   FREQ_SYS >= 14000000
  81   2          ++ SAFE_MOD;
  82   2      #endif
  83   2      #if   FREQ_SYS >= 16000000
  84   2          ++ SAFE_MOD;
  85   2      #endif
  86   2      #if   FREQ_SYS >= 18000000
  87   2          ++ SAFE_MOD;
  88   2      #endif
  89   2      #if   FREQ_SYS >= 20000000
  90   2          ++ SAFE_MOD;
  91   2      #endif
  92   2      #if   FREQ_SYS >= 22000000
  93   2          ++ SAFE_MOD;
  94   2      #endif
  95   2      #if   FREQ_SYS >= 24000000
  96   2          ++ SAFE_MOD;
  97   2      #endif
  98   2      #if   FREQ_SYS >= 26000000
                  ++ SAFE_MOD;
              #endif
 101   2      #if   FREQ_SYS >= 28000000
                  ++ SAFE_MOD;
              #endif
 104   2      #if   FREQ_SYS >= 30000000
                  ++ SAFE_MOD;
              #endif
 107   2      #if   FREQ_SYS >= 32000000
                  ++ SAFE_MOD;
              #endif
 110   2      #if   FREQ_SYS >= 34000000
                  ++ SAFE_MOD;
              #endif
 113   2      #if   FREQ_SYS >= 36000000
                  ++ SAFE_MOD;
              #endif
C51 COMPILER V9.60.0.0   DEBUG                                                             08/23/2020 09:56:11 PAGE 3   

 116   2      #if   FREQ_SYS >= 38000000
                  ++ SAFE_MOD;
              #endif
 119   2      #if   FREQ_SYS >= 40000000
                  ++ SAFE_MOD;
              #endif
 122   2      #if   FREQ_SYS >= 42000000
                  ++ SAFE_MOD;
              #endif
 125   2      #if   FREQ_SYS >= 44000000
                  ++ SAFE_MOD;
              #endif
 128   2      #if   FREQ_SYS >= 46000000
                  ++ SAFE_MOD;
              #endif
 131   2      #if   FREQ_SYS >= 48000000
                  ++ SAFE_MOD;
              #endif
 134   2      #if   FREQ_SYS >= 50000000
                  ++ SAFE_MOD;
              #endif
 137   2      #if   FREQ_SYS >= 52000000
                  ++ SAFE_MOD;
              #endif
 140   2      #if   FREQ_SYS >= 54000000
                  ++ SAFE_MOD;
              #endif
 143   2      #if   FREQ_SYS >= 56000000
                  ++ SAFE_MOD;
              #endif
 146   2      #endif
 147   2          -- n;
 148   2        }
 149   1      }
 150          
 151          /*******************************************************************************
 152          * Function Name  : mDelayms(UNIT16 n)
 153          * Description    : msÑÓÊ±º¯Êý
 154          * Input          : UNIT16 n
 155          * Output         : None
 156          * Return         : None
 157          *******************************************************************************/
 158          void mDelaymS( UINT16 n )                                                  // ÒÔmSÎªµ¥Î»ÑÓÊ±
 159          {
 160   1        while ( n ) 
 161   1        {
 162   2          mDelayuS( 1000 );
 163   2          -- n;
 164   2        }
 165   1      }                                         
 166          
 167          /*******************************************************************************
 168          * Function Name  : CH549UART0Alter()
 169          * Description    : CH549´®¿Ú0Òý½ÅÓ³Éä,´®¿ÚÓ³Éäµ½P0.2(R)ºÍP0.3(T)
 170          * Input          : None
 171          * Output         : None
 172          * Return         : None
 173          *******************************************************************************/
 174          void CH549UART0Alter()
 175          {
 176   1        P0_MOD_OC |= (3<<2);                                                   //×¼Ë«ÏòÄ£Ê½
 177   1        P0_DIR_PU |= (3<<2);
C51 COMPILER V9.60.0.0   DEBUG                                                             08/23/2020 09:56:11 PAGE 4   

 178   1        PIN_FUNC |= bUART0_PIN_X;                                              //¿ªÆôÒý½Å¸´ÓÃ¹¦ÄÜ
 179   1      }
 180          
 181          /*******************************************************************************
 182          * Function Name  : mInitSTDIO()
 183          * Description    : CH559´®¿Ú0³õÊ¼»¯,Ä¬ÈÏÊ¹ÓÃT1×÷UART0µÄ²¨ÌØÂÊ·¢ÉúÆ÷,Ò²¿ÉÒÔÊ¹ÓÃT2
 184                             ×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷
 185          * Input          : None
 186          * Output         : None+
 187          * Return         : None
 188          *******************************************************************************/
 189          void mInitSTDIO( )
 190          {
 191   1          UINT32 x;
 192   1          UINT8 x2; 
 193   1      
 194   1          SM0 = 0;
 195   1          SM1 = 1;
 196   1          SM2 = 0;                                                                   //´®¿Ú0Ê¹ÓÃÄ£Ê½1
 197   1                                                                                     //Ê¹ÓÃTimer1×÷Îª²¨ÌØÂÊ·¢ÉúÆ
             -÷
 198   1          RCLK = 0;                                                                  //UART0½ÓÊÕÊ±ÖÓ
 199   1          TCLK = 0;                                                                  //UART0·¢ËÍÊ±ÖÓ
 200   1          PCON |= SMOD;
 201   1          x = 10 * FREQ_SYS / UART0BUAD / 16;                                        //Èç¹û¸ü¸ÄÖ÷Æµ£¬×¢ÒâxµÄÖµ²»
             -ÒªÒç³ö                            
 202   1          x2 = x % 10;
 203   1          x /= 10;
 204   1          if ( x2 >= 5 ) x ++;                                                       //ËÄÉáÎåÈë
 205   1      
 206   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20£¬Timer1×÷Îª8Î»×Ô¶¯ÖØ
             -ÔØ¶¨Ê±Æ÷
 207   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Ê±ÖÓÑ¡Ôñ
 208   1          TH1 = 0-x;                                                                 //12MHz¾§Õñ,buad/12ÎªÊµ¼ÊÐè
             -ÉèÖÃ²¨ÌØÂÊ
 209   1          TR1 = 1;                                                                   //Æô¶¯¶¨Ê±Æ÷1
 210   1          TI = 1;
 211   1          REN = 1;                                                                   //´®¿Ú0½ÓÊÕÊ¹ÄÜ
 212   1      }
 213          
 214           /*******************************************************************************
 215           * Function Name  : CH549SoftReset()
 216           * Description    : CH549Èí¸´Î»
 217           * Input          : None
 218           * Output         : None
 219           * Return         : None
 220           *******************************************************************************/
 221          void CH549SoftReset( )
 222          {
 223   1        SAFE_MOD = 0x55;
 224   1        SAFE_MOD = 0xAA;
 225   1        GLOBAL_CFG |= bSW_RESET;
 226   1      }
 227          /*******************************************************************************
 228          * Function Name  : CH549WDTModeSelect(UINT8 mode)
 229          * Description    : CH549¿´ÃÅ¹·Ä£Ê½Ñ¡Ôñ
 230          *                  8Î»¼ÆÊýÆ÷£¬Òç³öÖÜÆÚ£¨Ãë£©£º (131072/FREQ_SYS)*£¨256-WDOG_COUNT£©
 231          * Input          : UINT8 mode 
 232                             0  timer
 233                             1  watchDog
 234          * Output         : None
 235          * Return         : None
C51 COMPILER V9.60.0.0   DEBUG                                                             08/23/2020 09:56:11 PAGE 5   

 236          *******************************************************************************/
 237          void CH549WDTModeSelect(UINT8 mode)
 238          {
 239   1         SAFE_MOD = 0x55;
 240   1         SAFE_MOD = 0xaa;                                                             //½øÈë°²È«Ä£Ê½
 241   1         if(mode){
 242   2           GLOBAL_CFG |= bWDOG_EN;                                                    //Æô¶¯¿´ÃÅ¹·¸´Î»
 243   2         }
 244   1         else GLOBAL_CFG &= ~bWDOG_EN;                                                //Æô¶¯¿´ÃÅ¹·½ö½ö×÷Îª¶¨Ê±Æ÷
 245   1         SAFE_MOD = 0x00;                                                             //ÍË³ö°²È«Ä£Ê½
 246   1         WDOG_COUNT = 0;                                                              //¿´ÃÅ¹·¸³³õÖµ
 247   1      }
 248          
 249          /*******************************************************************************
 250          * Function Name  : CH549WDTFeed(UINT8 tim)
 251          * Description    : CH549¿´ÃÅ¹·¶¨Ê±Ê±¼äÉèÖÃ
 252          * Input          : UINT8 tim ¿´ÃÅ¹·¸´Î»Ê±¼äÉèÖÃ
 253                             00H(12MHz)=2.8s     00H(24MHz)=1.4s
 254                             80H(12MHz)=1.4s     80H(24MHz)=0.7s
 255          * Output         : None
 256          * Return         : None
 257          *******************************************************************************/
 258          void CH549WDTFeed(UINT8 tim)
 259          {
 260   1         WDOG_COUNT = tim;                                                             //¿´ÃÅ¹·¼ÆÊýÆ÷¸³Öµ 
 261   1      }
 262          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    246    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
