C51 COMPILER V9.59.0.0   OLED                                                              01/08/2020 14:58:56 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\obj\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE OLED\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\ADC;.\Compare;.\FlashRom;.
                    -\GPIO;.\Public;.\PWM;.\SPI;.\Timer;.\TouchKey;.\UART;.\USB;.\Type_C;.\Infrared;.\OLED;.\HC-SR04;.\MNPWM) DEBUG OBJECTEXT
                    -END PRINT(.\oled.lst) TABS(2) OBJECT(.\obj\oled.obj)

line level    source

   1          #include "oledfont.h"
   2          #include "oled.h"
   3          sbit OLED_SCL=P0^0;//时钟 D0（SCLK?
   4          sbit OLED_SDIN=P0^1;//D1（MOSI） 数据
   5          /**********************************************
   6          //IIC Start
   7          **********************************************/
   8          void IIC_Start()
   9          {
  10   1      
  11   1        OLED_SCLK_Set() ;
  12   1        OLED_SDIN_Set();
  13   1        OLED_SDIN_Clr();
  14   1        OLED_SCLK_Clr();
  15   1      }
  16          
  17          /**********************************************
  18          //IIC Stop
  19          **********************************************/
  20          void IIC_Stop()
  21          {
  22   1      OLED_SCLK_Set() ;
  23   1      //  OLED_SCLK_Clr();
  24   1        OLED_SDIN_Clr();
  25   1        OLED_SDIN_Set();
  26   1        
  27   1      }
  28          
  29          void IIC_Wait_Ack()
  30          {
  31   1      
  32   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  33   1        //GPIOB->CRH |= 0x00080000;
  34   1      //  OLED_SDA = 1;
  35   1      //  delay_us(1);
  36   1        //OLED_SCL = 1;
  37   1        //delay_us(50000);
  38   1      /*  while(1)
  39   1        {
  40   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  41   1          {
  42   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  43   1            //GPIOB->CRH |= 0x00030000;
  44   1            return;
  45   1          }
  46   1        }
  47   1      */
  48   1        OLED_SCLK_Set() ;
  49   1        OLED_SCLK_Clr();
  50   1      }
  51          /**********************************************
  52          // IIC Write byte
  53          **********************************************/
C51 COMPILER V9.59.0.0   OLED                                                              01/08/2020 14:58:56 PAGE 2   

  54          
  55          void Write_IIC_Byte(unsigned char IIC_Byte)
  56          {
  57   1        unsigned char i;
  58   1        unsigned char m,da;
  59   1        da=IIC_Byte;
  60   1        OLED_SCLK_Clr();
  61   1        for(i=0;i<8;i++)    
  62   1        {
  63   2            m=da;
  64   2          //  OLED_SCLK_Clr();
  65   2          m=m&0x80;
  66   2          if(m==0x80)
  67   2          {OLED_SDIN_Set();}
  68   2          else OLED_SDIN_Clr();
  69   2            da=da<<1;
  70   2          OLED_SCLK_Set();
  71   2          OLED_SCLK_Clr();
  72   2          }
  73   1      
  74   1      
  75   1      }
  76          /**********************************************
  77          // IIC Write Command
  78          **********************************************/
  79          void Write_IIC_Command(unsigned char IIC_Command)
  80          {
  81   1         IIC_Start();
  82   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  83   1        IIC_Wait_Ack(); 
  84   1         Write_IIC_Byte(0x00);      //write command
  85   1        IIC_Wait_Ack(); 
  86   1         Write_IIC_Byte(IIC_Command); 
  87   1        IIC_Wait_Ack(); 
  88   1         IIC_Stop();
  89   1      }
  90          /**********************************************
  91          // IIC Write Data
  92          **********************************************/
  93          void Write_IIC_Data(unsigned char IIC_Data)
  94          {
  95   1         IIC_Start();
  96   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
  97   1        IIC_Wait_Ack(); 
  98   1         Write_IIC_Byte(0x40);      //write data
  99   1        IIC_Wait_Ack(); 
 100   1         Write_IIC_Byte(IIC_Data);
 101   1        IIC_Wait_Ack(); 
 102   1         IIC_Stop();
 103   1      }
 104          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 105          {
 106   1        if(cmd)
 107   1            {
 108   2      
 109   2         Write_IIC_Data(dat);
 110   2         
 111   2          }
 112   1        else {
 113   2         Write_IIC_Command(dat);
 114   2          
 115   2        }
C51 COMPILER V9.59.0.0   OLED                                                              01/08/2020 14:58:56 PAGE 3   

 116   1      
 117   1      
 118   1      }
 119          
 120          /********************************************
 121          // fill_Picture
 122          ********************************************/
 123          void fill_picture(unsigned char fill_Data)
 124          {
 125   1        unsigned char m,n;
 126   1        for(m=0;m<8;m++)
 127   1        {
 128   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 129   2          OLED_WR_Byte(0x02,0);   //low column start address
 130   2          OLED_WR_Byte(0x10,0);   //high column start address
 131   2          for(n=0;n<128;n++)
 132   2            {
 133   3              OLED_WR_Byte(fill_Data,1);
 134   3            }
 135   2        }
 136   1      }
 137          
 138          
 139          /***********************Delay****************************************/
 140          void Delay_50ms(unsigned int Del_50ms)
 141          {
 142   1        unsigned int m;
 143   1        for(;Del_50ms>0;Del_50ms--)
 144   1          for(m=6245;m>0;m--);
 145   1      }
 146          
 147          void Delay_1ms(unsigned int Del_1ms)
 148          {
 149   1        unsigned char j;
 150   1        while(Del_1ms--)
 151   1        { 
 152   2          for(j=0;j<123;j++);
 153   2        }
 154   1      }
 155          
 156          //坐标设置
 157          
 158            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 159          { 
 160   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 161   1        OLED_WR_Byte((((x+2)&0xf0)>>4)|0x10,OLED_CMD);
 162   1        OLED_WR_Byte(((x+2)&0x0f),OLED_CMD); 
 163   1      }     
 164          //开启OLED显示    
 165          void OLED_Display_On(void)
 166          {
 167   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 168   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 169   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 170   1      }
 171          //关闭OLED显示     
 172          void OLED_Display_Off(void)
 173          {
 174   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 175   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 176   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 177   1      }            
C51 COMPILER V9.59.0.0   OLED                                                              01/08/2020 14:58:56 PAGE 4   

 178          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 179          void OLED_Clear(void)  
 180          {  
 181   1        u8 i,n;       
 182   1        for(i=0;i<8;i++)  
 183   1        {  
 184   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 185   2          OLED_WR_Byte (0x02,OLED_CMD);      //设置显示位置―列低地址
 186   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 187   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 188   2        } //更新显示
 189   1      }
 190          void OLED_On(void)  
 191          {  
 192   1        u8 i,n;       
 193   1        for(i=0;i<8;i++)  
 194   1        {  
 195   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 196   2          OLED_WR_Byte (0x02,OLED_CMD);      //设置显示位置―列低地址
 197   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 198   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 199   2        } //更新显示
 200   1      }
 201          //在指定位置显示一个字符,包括部分字符
 202          //x:0~127
 203          //y:0~63
 204          //mode:0,反白显示;1,正常显示         
 205          //size:选择字体 16/12 
 206          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 207          {       
 208   1        unsigned char c=0,i=0;  
 209   1          c=chr-' ';//得到偏移后的值      
 210   1          if(x>Max_Column-1){x=0;y=y+2;}
 211   1          if(Char_Size ==16)
 212   1            {
 213   2            OLED_Set_Pos(x,y);  
 214   2            for(i=0;i<8;i++)
 215   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 216   2            OLED_Set_Pos(x,y+1);
 217   2            for(i=0;i<8;i++)
 218   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 219   2            }
 220   1            else {  
 221   2              OLED_Set_Pos(x,y);
 222   2              for(i=0;i<6;i++)
 223   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 224   2              
 225   2            }
 226   1      }
 227          //m^n函数
 228          u32 oled_pow(u8 m,u8 n)
 229          {
 230   1        u32 result=1;  
 231   1        while(n--)result*=m;    
 232   1        return result;
 233   1      }         
 234          //显示2个数字
 235          //x,y :起点坐标  
 236          //len :数字的位数
 237          //size:字体大小
 238          //mode:模式 0,填充模式;1,叠加模式
 239          //num:数值(0~4294967295);       
C51 COMPILER V9.59.0.0   OLED                                                              01/08/2020 14:58:56 PAGE 5   

 240          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 241          {           
 242   1        u8 t,temp;
 243   1        u8 enshow=0;               
 244   1        for(t=0;t<len;t++)
 245   1        {
 246   2          temp=(num/oled_pow(10,len-t-1))%10;
 247   2          if(enshow==0&&t<(len-1))
 248   2          {
 249   3            if(temp==0)
 250   3            {
 251   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 252   4              continue;
 253   4            }else enshow=1; 
 254   3             
 255   3          }
 256   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 257   2        }
 258   1      } 
 259          //显示一个字符号串
 260          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 261          {
 262   1        unsigned char j=0;
 263   1        while (chr[j]!='\0')
 264   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 265   2            x+=8;
 266   2          if(x>120){x=0;y+=2;}
 267   2            j++;
 268   2        }
 269   1      }
 270          //显示汉字
 271          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 272          {               
 273   1        u8 t,adder=0;
 274   1        OLED_Set_Pos(x,y);  
 275   1          for(t=0;t<16;t++)
 276   1          {
 277   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 278   2              adder+=1;
 279   2           }  
 280   1          OLED_Set_Pos(x,y+1);  
 281   1          for(t=0;t<16;t++)
 282   1            { 
 283   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 284   2              adder+=1;
 285   2            }         
 286   1      }
 287          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 288          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 289          {   
 290   1       unsigned int j=0;
 291   1       unsigned char x,y;
 292   1        
 293   1        if(y1%8==0) y=y1/8;      
 294   1        else y=y1/8+1;
 295   1        for(y=y0;y<y1;y++)
 296   1        {
 297   2          OLED_Set_Pos(x0,y);
 298   2          for(x=x0;x<x1;x++)
 299   2            {      
C51 COMPILER V9.59.0.0   OLED                                                              01/08/2020 14:58:56 PAGE 6   

 300   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 301   3            }
 302   2        }
 303   1      } 
 304          
 305          //初始化SSD1306             
 306          void OLED_Init(void)
 307          {   
 308   1       
 309   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 310   1        OLED_WR_Byte(0x02,OLED_CMD);//---set low column address
 311   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 312   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 313   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 314   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 315   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 316   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 317   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 318   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 319   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 320   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 321   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 322   1        OLED_WR_Byte(0x00,OLED_CMD);//
 323   1        
 324   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 325   1        OLED_WR_Byte(0x80,OLED_CMD);//
 326   1        
 327   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 328   1        OLED_WR_Byte(0x05,OLED_CMD);//
 329   1        
 330   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 331   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 332   1        
 333   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 334   1        OLED_WR_Byte(0x12,OLED_CMD);//
 335   1        
 336   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 337   1        OLED_WR_Byte(0x30,OLED_CMD);//
 338   1        
 339   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 340   1        OLED_WR_Byte(0x14,OLED_CMD);//
 341   1        
 342   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 343   1      }  
 344          
 345          
 346          
 347          
 348          
 349          
 350          
 351          
 352          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1345    ----
   CONSTANT SIZE    =   2904    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   OLED                                                              01/08/2020 14:58:56 PAGE 7   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
